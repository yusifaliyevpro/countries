import { capitals } from "../data/capitals";
import { cca2Codes } from "../data/cca2.codes";
import { cca3Codes } from "../data/cca3.codes";
import { ccn3Codes } from "../data/ccn3";
import { ciocCodes } from "../data/cioc";
import { currencies } from "../data/currencies";
import { languages, supportedLanguages } from "../data/langs";
import { regions } from "../data/regions";
import { subregions } from "../data/subregions";
import { LiteralUnion } from "./common";

export type CountryPicker<T extends readonly (keyof Country)[]> = Pick<Country, T[number]>;

export type SupportedLanguages = (typeof supportedLanguages)[number];
export type Cca3Code = LiteralUnion<(typeof cca3Codes)[number]>;
export type Cca2Code = LiteralUnion<(typeof cca2Codes)[number]>;
export type Capital = LiteralUnion<(typeof capitals)[number]>;
export type CiocCode = LiteralUnion<(typeof ciocCodes)[number]>;
export type Ccn3Code = LiteralUnion<(typeof ccn3Codes)[number]>;
export type Region = (typeof regions)[number];
export type Subregion = LiteralUnion<(typeof subregions)[number]>;
export type Lang = LiteralUnion<(typeof languages)[number]>;
export type Currency = LiteralUnion<(typeof currencies)[number]>;

type TranslationValue = { official: string; common: string };
type Translations = Partial<Record<SupportedLanguages, TranslationValue>> & Record<string, TranslationValue>;

export type Country = {
  name: { common: string; official: string; nativeName?: { [key: string]: { official: string; common: string } } };
  tld?: string[];
  cca2: string;
  ccn3?: string;
  cca3: string;
  cioc?: string;
  independent: boolean;
  status: string;
  unMember: boolean;
  currencies?: { [key: string]: { name: string; symbol: string } };
  idd: { root: string; suffixes: string[] } | Record<string, never>;
  capital?: string[];
  altSpellings: string[];
  region: string;
  subregion?: string;
  languages?: { [key: string]: string };
  translations: Translations;
  latlng: [number, number];
  landlocked: boolean;
  borders?: string[];
  area: number;
  demonyms: { [key: string]: { f: string; m: string } };
  flag: string;
  maps: { googleMaps: string; openStreetMaps: string };
  population: number;
  gini?: { [year: string]: number };
  fifa?: string;
  car: { signs?: string[]; side: string };
  timezones: string[];
  continents: string[];
  flags: { png: string; svg: string; alt?: string };
  coatOfArms: { png: string; svg: string; alt?: string } | Record<string, never>;
  startOfWeek: string;
  capitalInfo: { latlng: [number, number] | [] } | Record<string, never>;
  postalCode: { format: string | null; regex: string | null };
};
